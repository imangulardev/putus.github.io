{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#message {\\n    display: flex;\\n    font-size: 40px;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.button {\\n    padding: 20px;\\n    color: white;\\n    font-size: 30px;\\n    border-radius: 10px;\\n    background: black;\\n    border: 1px solid black;\\n    text-decoration: none;\\n    margin: 20px;\\n}\\n\\n.button:hover {\\n    background: white;\\n    color: black;\\n}\\n\"","module.exports = \"<div id=\\\"message\\\">{{message}} <a routerLink=\\\"/logout\\\" class=\\\"button\\\">Logout</a></div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  message = \"Loading....\"\n\n  constructor(private user: UserService) { }\n\n  ngOnInit() {\n    this.user.getSomeData().subscribe(data => {\n      this.message = data.message\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'login';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { HomeComponent } from './home/home.component'\nimport { AuthService } from './auth.service'\nimport { UserService } from './user.service'\nimport { AuthGuard } from './auth.guard';\nimport { LogoutComponent } from './logout/logout.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminComponent,\n    HomeComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'logout',\n        component: LogoutComponent\n      },\n      {\n        path: 'admin',\n        component: AdminComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: '',\n        component: HomeComponent\n      }\n    ])\n  ],\n  providers: [AuthService, UserService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service'\nimport { map } from 'rxjs/operators'\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService,\n    private router: Router,\n    private user: UserService) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      //debugger\n      if(this.auth.isLoggedIn) {\n        return true\n      }\n      return this.user.isLoggedIn().pipe(map(res => {\n        if(res.status) {\n          this.auth.setLoggedIn(true)\n          return true\n        } else {\n          this.router.navigate(['login'])\n          return false\n        }\n      }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\ninterface myData {\n  success: boolean,\n  message: string\n}\n\n@Injectable()\nexport class AuthService {\n\n  private loggedInStatus = false\n\n  constructor(private http: HttpClient) { }\n\n  setLoggedIn(value: boolean) {\n    this.loggedInStatus = value\n  }\n\n  get isLoggedIn() {\n    return this.loggedInStatus\n  }\n\n  getUserDetails(username, password) {\n    // post these details to API server return user info if correct\n    return this.http.post<myData>('/api/', {\n      username,\n      password\n    })\n  }\n\n}\n","module.exports = \"h1 {\\n    padding: 20px;\\n    text-align: center;\\n    border-bottom: 1px solid #eee;\\n}\\n\\n#buttons {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 500px;\\n}\\n\\n.button {\\n    padding: 20px;\\n    color: white;\\n    font-size: 30px;\\n    border-radius: 10px;\\n    background: black;\\n    border: 1px solid black;\\n    text-decoration: none;\\n    margin: 20px;\\n}\\n\\n.button:hover {\\n    background: white;\\n    color: black;\\n}\\n\"","module.exports = \"<h1>World's best app</h1>\\n<div id=\\\"buttons\\\">\\n  <a routerLink=\\\"/login\\\" class=\\\"button\\\">Login</a>\\n  <a routerLink=\\\"/admin\\\" class=\\\"button\\\">Go to admin</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"form {\\n    display: flex;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n}\\n\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items:center;\\n    padding: 20px;\\n    background: #eee;\\n    border-radius: 20px;\\n}\\n\\ninput#username, input#password {\\n    outline: 0;\\n    font-size: 20px;\\n    padding: 5px 10px;\\n    margin: 5px;\\n    min-width: 300px;\\n}\\n\\nbutton#submit {\\n    margin: 20px;\\n    padding: 20px;\\n    border-radius: 10px;\\n    font-size: 20px;\\n    cursor: pointer;\\n}\\n\"","module.exports = \"<form (submit)=\\\"loginUser($event)\\\">\\n  <div class=\\\"container\\\">\\n  <div>\\n    <input type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Username\\\" id=\\\"username\\\">\\n  </div>\\n  <div>\\n    <input type=\\\"password\\\" autocomplete=\\\"off\\\" placeholder=\\\"Password\\\" id=\\\"password\\\">\\n  </div>\\n  <div>\\n    <button type=\\\"submit\\\" id=\\\"submit\\\">Submit</button>\\n  </div>\\n</div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private Auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(event) {\n    event.preventDefault()\n    const target = event.target\n    const username = target.querySelector('#username').value\n    const password = target.querySelector('#password').value\n\n    this.Auth.getUserDetails(username, password).subscribe(data => {\n      if(data.success) {\n        this.router.navigate(['admin'])\n        this.Auth.setLoggedIn(true)\n      } else {\n        window.alert(data.message)\n      }\n    })\n    console.log(username, password)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Logging you out!\\n</p>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private user: UserService, private router: Router, private auth: AuthService) { }\n\n  ngOnInit() {\n    this.user.logout().subscribe(data => {\n      if(data.success) {\n        this.router.navigate([''])\n        this.auth.setLoggedIn(false)\n      } else {\n        window.alert('Some problem')\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\ninterface myData {\n  message: string,\n  success: boolean\n}\n\ninterface isLoggedIn {\n  status: boolean\n}\n\ninterface logoutStatus {\n  success: boolean\n}\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getSomeData() {\n    return this.http.get<myData>('')\n  }\n\n  isLoggedIn(): Observable<isLoggedIn> {\n    return this.http.get<isLoggedIn>('')\n  }\n\n  logout() {\n    return this.http.get<logoutStatus>('')\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}